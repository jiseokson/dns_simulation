#!/usr/bin/env python3

import sys
import threading

from config import config
import cache
import flag
import resolver

from regex import cache_command, recur_flag_command

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print(f'usage: rootDNSServer port', file=sys.stderr)
        sys.exit(1)
    try:
        port = int(sys.argv[1])
    except:
        print(f'error: invalid port number: {sys.argv[1]}', file=sys.stderr)
        sys.exit(1)
    if port != config.root.port:
        print(f'error: port number mismatch between configuration file and argument', file=sys.stderr)
        print(f'  given by configuration file: {config.root.port}')
        print(f'  given by argument:           {port}')
        sys.exit(1)

    rrcache = cache.Cache()
    rrcache.add_rr(cache.RR('com', config.comtld.name, 'NS'))
    rrcache.add_rr(cache.RR(config.comtld.name, config.comtld.ip, 'A'))
    recur_flag = flag.Flag(False)

    resolver_thread = threading.Thread( \
        target=resolver.resolver, \
        args=[rrcache, recur_flag, False, config.root.server, config.root.port])
    resolver_thread.start()

    while True:
        prompt = input('>>> ')
        if match := cache_command.match(prompt):
            rrcache.logs()
        elif match := recur_flag_command.match(prompt):
            command = match.group(1)
            if command == 'on':
                recur_flag.value = True
                print('recursive processing : on')
            elif command == 'off':
                recur_flag.value = False
                print('recursive processing : off')
