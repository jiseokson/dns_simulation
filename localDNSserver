#!/usr/bin/env python3

import sys
import threading

from config import config
import cache
import flag
import resolver

from regex import cache_command

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print(f'usage: localDNSserver port', file=sys.stderr)
        sys.exit(1)
    try:
        port = int(sys.argv[1])
    except:
        print(f'error: invalid port number: {sys.argv[1]}', file=sys.stderr)
        sys.exit(1)
    if port != config.local.port:
        print(f'error: port number mismatch between configuration file and argument', file=sys.stderr)
        print(f'  given by configuration file: {config.local.port}')
        print(f'  given by argument:           {port}')
        sys.exit(1)

    rrcache = cache.Cache()
    rrcache.add_rr(cache.RR('', config.root.name, 'NS'))
    rrcache.add_rr(cache.RR(config.root.name, config.root.ip, 'A'))
    recur_flag = flag.Flag(True)

    resolver_thread = threading.Thread( \
        target=resolver.resolver, \
        args=[rrcache, recur_flag, True, config.local.server, config.local.port])
    resolver_thread.start()

    while True:
        prompt = input('>>> ')
        if match := cache_command.match(prompt):
            rrcache.logs()
